name: SidePeek CI/CD with Gradle

on:
    push:
        branches:
            - main
            - dev
    pull_request:
        branches:
            - main
            - dev
            - 'feat/**'
            - 'fix/**'
            - 'refactor/**'
            - 'chore/**'

permissions:
    contents: read
    checks: write
    pull-requests: write

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                redis-version: [ latest ]

        steps:
            -   name: Repository Checkout
                uses: actions/checkout@v4
                with:
                    token: ${{ secrets.ACTION_TOKEN }}
                    submodules: true

            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    java-version: '17'
                    distribution: 'corretto'

            -   name: Set up Redis
                uses: supercharge/redis-github-action@1.7.0
                with:
                    redis-version: ${{ matrix.redis-version }}
                    redis-port: ${{ secrets.TEST_REDIS_PORT }}

            -   name: Set up MySQL
                uses: samin/mysql-action@v1.3
                with:
                    mysql user: ${{ secrets.TEST_DB_USER }}
                    mysql password: ${{ secrets.TEST_DB_PASSWORD }}
                    mysql database: ${{ secrets.TEST_DB }}
                    host port: ${{ secrets.TEST_DB_PORT }}

            -   name: create applications.yml
                shell: bash
                run: |
                    touch ./src/main/resources/application.yml
                    echo "${{ github.ref == 'refs/heads/main' ? secrets.PROD_APPLICATION : secrets.DEV_APPLICATION }}" >> ./src/main/resources/application.yml

            -   name: Grant execute permission for gradlew
                run: chmod +x gradlew

            -   name: Build with Gradle
                run: ./gradlew build

            # CI
            -   name: Test Jacoco Coverage Report
                if: github.event_name == 'pull_request'
                id: jacoco
                uses: madrapps/jacoco-report@v1.6.1
                with:
                    title: üìù Jacoco Test Coverage
                    paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
                    token: ${{ secrets.GITHUB_TOKEN }}
                    min-coverage-overall: 80
                    min-coverage-changed-files: 80

            -   name: Test Checkstyle Report
                if: github.event_name == 'pull_request'
                uses: lcollins/checkstyle-github-action@v2.0.0
                with:
                    path: '**/build/reports/checkstyle/**.xml'
                    title: üìù Checkstyle report

            -   name: Send Slack Notification
                if: github.event_name == 'pull_request'
                uses: 8398a7/action-slack@v3
                with:
                    status: ${{ job.status }}
                    author_name: Github Action Test
                    fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
                env:
                    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

            # CD
            -   name: Make Zip File
                if: github.event_name == 'push'
                run: zip -qq -r ./$GITHUB_SHA.zip .

            -   name: Configure AWS credentials
                if: github.event_name == 'push'
                uses: aws-actions/configure-aws-credentials@v2
                with:
                    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    aws-region: ap-northeast-2

            -   name: Upload to S3
                if: github.event_name == 'push'
                run: |
                    aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ secrets.S3_BUCKET_NAME }}/deploy/${{ github.ref == 'refs/heads/main' ? 'prod': 'dev' } }/$GITHUB_SHA.zip

            -   name: Deploy with AWS codeDeploy
                if: github.event_name == 'push'
                run: |
                    aws deploy create-deployment
                        --application-name ${{ github.ref == 'refs/heads/main' ? secrets.CODE_DEPLOY_PROD_APP_NAME: secrets.CODE_DEPLOY_DEV_APP_NAME }}
                        --deployment-config-name CodeDeployDefault.AllAtOnce
                        --deployment-group-name ${{ github.ref == 'refs/heads/main' ? secrets.CODE_DEPLOY_PROD_GROUP_NAME: secrets.CODE_DEPLOY_DEV_GROUP_NAME }}
                        --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=deploy/${{ github.ref == 'refs/heads/main' ? 'prod': 'dev' } }/$GITHUB_SHA.zip
